-- As a reminder for all of the following questions, 
-- you're working as a researcher for your state's 
-- department of education, and using their database to 
-- create queries. (You may already be familiar with the 
-- department_of_education database).

-- You'll begin your analysis with the naep table. 
-- It's always a good idea to get a better 
-- understanding of your data before doing any analysis.

-- This allows you to gather key insights 
-- before you jump into any complex operations. Youâ€™ll 
-- want to know what columns are reported in your data 
-- and what the data types are for each column.

-- Write a query that selects column_name and data_type 
-- from information_schema.columns.

SELECT column_name, data_type
FROM information_schema.columns
WHERE table_name = 'naep';

-- Write a query to select the first fifty records of the naep table.

SELECT *
FROM naep
LIMIT 50;

-- Another good way to understand your data is to calculate 
-- various summary statistics.

-- Summary statistics can give you very useful information, 
-- such as where your data is centered and how spread out it is. 
-- These summary statistics include count, average, min, and max values.

-- Write a query that returns summary statistics for avg_math_4_score 
-- by state. Do this by using aliases, such as COUNT(avg_math_4_score) as count_4, 
-- and repeat this for the remaining aliasesavg_4, min_4, and max_4, 
-- for AVG, MIN, and MAX, respectively. Finally, sort the results 
-- alphabetically by state name.

SELECT state, COUNT(avg_math_4_score) AS count_4, 
        AVG(avg_math_4_score) AS avg_4, 
		MIN(avg_math_4_score) AS min_4, 
        MAX(avg_math_4_score) AS max_4
FROM naep
GROUP BY state
ORDER BY state;

-- When a state has a large gap between the max and min 
-- values for a score, that's a good indicator that 
-- there may be problems with the education system in that state.

-- You decide that for avg_math_4_score, a gap of more 
-- than 30 between max and min values is probably a bad sign.

-- Write a query that alters the previous query so that 
-- it returns only the summary statistics for avg_math_4_score 
-- by state with differences in max and min values 
-- that are greater than 30.

SELECT state, COUNT(avg_math_4_score) as count_4, 
	AVG(avg_math_4_score) as avg_4, 
	MIN(avg_math_4_score) as min_4, 
	MAX(avg_math_4_score) as max_4
FROM naep
GROUP BY state
HAVING MAX(avg_math_4_score) - MIN(avg_math_4_score)  > 30
ORDER BY state;

-- Write a query that returns the avg_math_4_score as 
-- the alias avg_score and the state as the alias 
-- bottom_10_states that lists the states in the bottom 
-- 10 for avg_math_4_score in the year 2000.

SELECT avg_math_4_score::float AS avg_score, state AS bottom_10_states
FROM naep
WHERE year = '2000'
ORDER BY avg_math_4_score
LIMIT 10;

-- Write a query that calculates the average avg_math_4_score 
-- rounded to the nearest 2 decimal places over all states in 
-- the year 2000. The resulting variable should still be 
-- named avg_math_4_score.

SELECT round(AVG(avg_math_4_score), 2) AS avg_math_4_score
FROM naep
WHERE year = '2000';

-- Write a query that returns a field called below_250 
-- that lists all states with an avg_math_4_score less 
-- than 250 over all states in the year 2000.

SELECT state AS below_250
FROM naep
WHERE avg_math_4_score < 250 AND year = '2000';

-- Write a query that returns a field called 
-- scores_missing_y2000 that lists any states 
-- with missing values in the avg_math_4_score 
-- column of the naep data table for the year 2000.

SELECT naep.state, ROUND(naep.avg_math_4_score, 2) AS avg_math_4_score, 
		finance.total_expenditure
FROM naep
LEFT OUTER JOIN finance ON naep.id = finance.id
WHERE naep.year = '2000' AND avg_math_4_score IS NOT NULL
ORDER BY finance.total_expenditure DESC;


